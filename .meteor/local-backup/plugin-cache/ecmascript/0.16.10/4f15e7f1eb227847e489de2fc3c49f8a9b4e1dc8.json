{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/gckelechi/SmartKid/packages/blaze/template.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/blaze/template.js","filename":"/home/gckelechi/SmartKid/packages/blaze/template.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/gckelechi/SmartKid","root":"/home/gckelechi/SmartKid","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/gckelechi/SmartKid/packages/blaze/template.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/blaze/template.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isObject;\n    module.link(\"lodash.isobject\", {\n      default(v) {\n        isObject = v;\n      }\n    }, 0);\n    let isFunction;\n    module.link(\"lodash.isfunction\", {\n      default(v) {\n        isFunction = v;\n      }\n    }, 1);\n    let has;\n    module.link(\"lodash.has\", {\n      default(v) {\n        has = v;\n      }\n    }, 2);\n    let isEmpty;\n    module.link(\"lodash.isempty\", {\n      default(v) {\n        isEmpty = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    // [new] Blaze.Template([viewName], renderFunction)\n    //\n    // `Blaze.Template` is the class of templates, like `Template.foo` in\n    // Meteor, which is `instanceof Template`.\n    //\n    // `viewKind` is a string that looks like \"Template.foo\" for templates\n    // defined by the compiler.\n\n    /**\n     * @class\n     * @summary Constructor for a Template, which is used to construct Views with particular name and content.\n     * @locus Client\n     * @param {String} [viewName] Optional.  A name for Views constructed by this Template.  See [`view.name`](#view_name).\n     * @param {Function} renderFunction A function that returns [*renderable content*](#Renderable-Content).  This function is used as the `renderFunction` for Views constructed by this Template.\n     */\n    Blaze.Template = function (viewName, renderFunction) {\n      if (!(this instanceof Blaze.Template))\n        // called without `new`\n        return new Blaze.Template(viewName, renderFunction);\n      if (typeof viewName === 'function') {\n        // omitted \"viewName\" argument\n        renderFunction = viewName;\n        viewName = '';\n      }\n      if (typeof viewName !== 'string') throw new Error(\"viewName must be a String (or omitted)\");\n      if (typeof renderFunction !== 'function') throw new Error(\"renderFunction must be a function\");\n      this.viewName = viewName;\n      this.renderFunction = renderFunction;\n      this.__helpers = new HelperMap();\n      this.__eventMaps = [];\n      this._callbacks = {\n        created: [],\n        rendered: [],\n        destroyed: []\n      };\n    };\n    const Template = Blaze.Template;\n    const HelperMap = function () {};\n    HelperMap.prototype.get = function (name) {\n      return this[' ' + name];\n    };\n    HelperMap.prototype.set = function (name, helper) {\n      this[' ' + name] = helper;\n    };\n    HelperMap.prototype.has = function (name) {\n      return typeof this[' ' + name] !== 'undefined';\n    };\n\n    /**\n     * @summary Returns true if `value` is a template object like `Template.myTemplate`.\n     * @locus Client\n     * @param {Any} value The value to test.\n     */\n    Blaze.isTemplate = function (t) {\n      return t instanceof Blaze.Template;\n    };\n\n    /**\n     * @name  onCreated\n     * @instance\n     * @memberOf Template\n     * @summary Register a function to be called when an instance of this template is created.\n     * @param {Function} callback A function to be added as a callback.\n     * @locus Client\n     * @importFromPackage templating\n     */\n    Template.prototype.onCreated = function (cb) {\n      this._callbacks.created.push(cb);\n    };\n\n    /**\n     * @name  onRendered\n     * @instance\n     * @memberOf Template\n     * @summary Register a function to be called when an instance of this template is inserted into the DOM.\n     * @param {Function} callback A function to be added as a callback.\n     * @locus Client\n     * @importFromPackage templating\n     */\n    Template.prototype.onRendered = function (cb) {\n      this._callbacks.rendered.push(cb);\n    };\n\n    /**\n     * @name  onDestroyed\n     * @instance\n     * @memberOf Template\n     * @summary Register a function to be called when an instance of this template is removed from the DOM and destroyed.\n     * @param {Function} callback A function to be added as a callback.\n     * @locus Client\n     * @importFromPackage templating\n     */\n    Template.prototype.onDestroyed = function (cb) {\n      this._callbacks.destroyed.push(cb);\n    };\n    Template.prototype._getCallbacks = function (which) {\n      const self = this;\n      let callbacks = self[which] ? [self[which]] : [];\n      // Fire all callbacks added with the new API (Template.onRendered())\n      // as well as the old-style callback (e.g. Template.rendered) for\n      // backwards-compatibility.\n      callbacks = callbacks.concat(self._callbacks[which]);\n      return callbacks;\n    };\n    const fireCallbacks = function (callbacks, template) {\n      Template._withTemplateInstanceFunc(function () {\n        return template;\n      }, function () {\n        for (let i = 0, N = callbacks.length; i < N; i++) {\n          callbacks[i].call(template);\n        }\n      });\n    };\n    Template.prototype.constructView = function (contentFunc, elseFunc) {\n      const self = this;\n      const view = Blaze.View(self.viewName, self.renderFunction);\n      view.template = self;\n      view.templateContentBlock = contentFunc ? new Template('(contentBlock)', contentFunc) : null;\n      view.templateElseBlock = elseFunc ? new Template('(elseBlock)', elseFunc) : null;\n      if (self.__eventMaps || typeof self.events === 'object') {\n        view._onViewRendered(function () {\n          if (view.renderCount !== 1) return;\n          if (!self.__eventMaps.length && typeof self.events === \"object\") {\n            // Provide limited back-compat support for `.events = {...}`\n            // syntax.  Pass `template.events` to the original `.events(...)`\n            // function.  This code must run only once per template, in\n            // order to not bind the handlers more than once, which is\n            // ensured by the fact that we only do this when `__eventMaps`\n            // is falsy, and we cause it to be set now.\n            Template.prototype.events.call(self, self.events);\n          }\n          self.__eventMaps.forEach(function (m) {\n            Blaze._addEventMap(view, m, view);\n          });\n        });\n      }\n      view._templateInstance = new Blaze.TemplateInstance(view);\n      view.templateInstance = function () {\n        // Update data, firstNode, and lastNode, and return the TemplateInstance\n        // object.\n        const inst = view._templateInstance;\n\n        /**\n         * @instance\n         * @memberOf Blaze.TemplateInstance\n         * @name  data\n         * @summary The data context of this instance's latest invocation.\n         * @locus Client\n         */\n        inst.data = Blaze.getData(view);\n        if (view._domrange && !view.isDestroyed) {\n          inst.firstNode = view._domrange.firstNode();\n          inst.lastNode = view._domrange.lastNode();\n        } else {\n          // on 'created' or 'destroyed' callbacks we don't have a DomRange\n          inst.firstNode = null;\n          inst.lastNode = null;\n        }\n        return inst;\n      };\n\n      /**\n       * @name  created\n       * @instance\n       * @memberOf Template\n       * @summary Provide a callback when an instance of a template is created.\n       * @locus Client\n       * @deprecated in 1.1\n       */\n      // To avoid situations when new callbacks are added in between view\n      // instantiation and event being fired, decide on all callbacks to fire\n      // immediately and then fire them on the event.\n      const createdCallbacks = self._getCallbacks('created');\n      view.onViewCreated(function () {\n        fireCallbacks(createdCallbacks, view.templateInstance());\n      });\n\n      /**\n       * @name  rendered\n       * @instance\n       * @memberOf Template\n       * @summary Provide a callback when an instance of a template is rendered.\n       * @locus Client\n       * @deprecated in 1.1\n       */\n      const renderedCallbacks = self._getCallbacks('rendered');\n      view.onViewReady(function () {\n        fireCallbacks(renderedCallbacks, view.templateInstance());\n      });\n\n      /**\n       * @name  destroyed\n       * @instance\n       * @memberOf Template\n       * @summary Provide a callback when an instance of a template is destroyed.\n       * @locus Client\n       * @deprecated in 1.1\n       */\n      const destroyedCallbacks = self._getCallbacks('destroyed');\n      view.onViewDestroyed(function () {\n        fireCallbacks(destroyedCallbacks, view.templateInstance());\n      });\n      return view;\n    };\n\n    /**\n     * @class\n     * @summary The class for template instances\n     * @param {Blaze.View} view\n     * @instanceName template\n     */\n    Blaze.TemplateInstance = function (view) {\n      if (!(this instanceof Blaze.TemplateInstance))\n        // called without `new`\n        return new Blaze.TemplateInstance(view);\n      if (!(view instanceof Blaze.View)) throw new Error(\"View required\");\n      view._templateInstance = this;\n\n      /**\n       * @name view\n       * @memberOf Blaze.TemplateInstance\n       * @instance\n       * @summary The [View](../api/blaze.html#Blaze-View) object for this invocation of the template.\n       * @locus Client\n       * @type {Blaze.View}\n       */\n      this.view = view;\n      this.data = null;\n\n      /**\n       * @name firstNode\n       * @memberOf Blaze.TemplateInstance\n       * @instance\n       * @summary The first top-level DOM node in this template instance.\n       * @locus Client\n       * @type {DOMNode}\n       */\n      this.firstNode = null;\n\n      /**\n       * @name lastNode\n       * @memberOf Blaze.TemplateInstance\n       * @instance\n       * @summary The last top-level DOM node in this template instance.\n       * @locus Client\n       * @type {DOMNode}\n       */\n      this.lastNode = null;\n\n      // This dependency is used to identify state transitions in\n      // _subscriptionHandles which could cause the result of\n      // TemplateInstance#subscriptionsReady to change. Basically this is triggered\n      // whenever a new subscription handle is added or when a subscription handle\n      // is removed and they are not ready.\n      this._allSubsReadyDep = new Tracker.Dependency();\n      this._allSubsReady = false;\n      this._subscriptionHandles = {};\n    };\n\n    /**\n     * @summary Find all elements matching `selector` in this template instance, and return them as a JQuery object.\n     * @locus Client\n     * @param {String} selector The CSS selector to match, scoped to the template contents.\n     * @returns {DOMNode[]}\n     */\n    Blaze.TemplateInstance.prototype.$ = function (selector) {\n      const view = this.view;\n      if (!view._domrange) throw new Error(\"Can't use $ on template instance with no DOM\");\n      return view._domrange.$(selector);\n    };\n\n    /**\n     * @summary Find all elements matching `selector` in this template instance.\n     * @locus Client\n     * @param {String} selector The CSS selector to match, scoped to the template contents.\n     * @returns {DOMElement[]}\n     */\n    Blaze.TemplateInstance.prototype.findAll = function (selector) {\n      return Array.prototype.slice.call(this.$(selector));\n    };\n\n    /**\n     * @summary Find one element matching `selector` in this template instance.\n     * @locus Client\n     * @param {String} selector The CSS selector to match, scoped to the template contents.\n     * @returns {DOMElement}\n     */\n    Blaze.TemplateInstance.prototype.find = function (selector) {\n      const result = this.$(selector);\n      return result[0] || null;\n    };\n\n    /**\n     * @summary A version of [Tracker.autorun](https://docs.meteor.com/api/tracker.html#Tracker-autorun) that is stopped when the template is destroyed.\n     * @locus Client\n     * @param {Function} runFunc The function to run. It receives one argument: a Tracker.Computation object.\n     */\n    Blaze.TemplateInstance.prototype.autorun = function (f) {\n      return this.view.autorun(f);\n    };\n\n    /**\n     * @summary A version of [Meteor.subscribe](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe) that is stopped\n     * when the template is destroyed.\n     * @return {SubscriptionHandle} The subscription handle to the newly made\n     * subscription. Call `handle.stop()` to manually stop the subscription, or\n     * `handle.ready()` to find out if this particular subscription has loaded all\n     * of its inital data.\n     * @locus Client\n     * @param {String} name Name of the subscription.  Matches the name of the\n     * server's `publish()` call.\n     * @param {Any} [arg1,arg2...] Optional arguments passed to publisher function\n     * on server.\n     * @param {Function|Object} [options] If a function is passed instead of an\n     * object, it is interpreted as an `onReady` callback.\n     * @param {Function} [options.onReady] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n     * @param {Function} [options.onStop] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n     * @param {DDP.Connection} [options.connection] The connection on which to make the\n     * subscription.\n     */\n    Blaze.TemplateInstance.prototype.subscribe = function () {\n      const self = this;\n      const subHandles = self._subscriptionHandles;\n\n      // Duplicate logic from Meteor.subscribe\n      let options = {};\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      if (args.length) {\n        const lastParam = args[args.length - 1];\n\n        // Match pattern to check if the last arg is an options argument\n        const lastParamOptionsPattern = {\n          onReady: Match.Optional(Function),\n          // XXX COMPAT WITH 1.0.3.1 onError used to exist, but now we use\n          // onStop with an error callback instead.\n          onError: Match.Optional(Function),\n          onStop: Match.Optional(Function),\n          connection: Match.Optional(Match.Any)\n        };\n        if (isFunction(lastParam)) {\n          options.onReady = args.pop();\n        } else if (lastParam && !isEmpty(lastParam) && Match.test(lastParam, lastParamOptionsPattern)) {\n          options = args.pop();\n        }\n      }\n      let subHandle;\n      const oldStopped = options.onStop;\n      options.onStop = function (error) {\n        // When the subscription is stopped, remove it from the set of tracked\n        // subscriptions to avoid this list growing without bound\n        delete subHandles[subHandle.subscriptionId];\n\n        // Removing a subscription can only change the result of subscriptionsReady\n        // if we are not ready (that subscription could be the one blocking us being\n        // ready).\n        if (!self._allSubsReady) {\n          self._allSubsReadyDep.changed();\n        }\n        if (oldStopped) {\n          oldStopped(error);\n        }\n      };\n      const {\n        onReady,\n        onError,\n        onStop,\n        connection\n      } = options;\n      const callbacks = {\n        onReady,\n        onError,\n        onStop\n      };\n\n      // The callbacks are passed as the last item in the arguments array passed to\n      // View#subscribe\n      args.push(callbacks);\n\n      // View#subscribe takes the connection as one of the options in the last\n      // argument\n      subHandle = self.view.subscribe.call(self.view, args, {\n        connection: connection\n      });\n      if (!has(subHandles, subHandle.subscriptionId)) {\n        subHandles[subHandle.subscriptionId] = subHandle;\n\n        // Adding a new subscription will always cause us to transition from ready\n        // to not ready, but if we are already not ready then this can't make us\n        // ready.\n        if (self._allSubsReady) {\n          self._allSubsReadyDep.changed();\n        }\n      }\n      return subHandle;\n    };\n\n    /**\n     * @summary A reactive function that returns true when all of the subscriptions\n     * called with [this.subscribe](#TemplateInstance-subscribe) are ready.\n     * @return {Boolean} True if all subscriptions on this template instance are\n     * ready.\n     */\n    Blaze.TemplateInstance.prototype.subscriptionsReady = function () {\n      this._allSubsReadyDep.depend();\n      this._allSubsReady = Object.values(this._subscriptionHandles).every(handle => {\n        return handle.ready();\n      });\n      return this._allSubsReady;\n    };\n\n    /**\n     * @summary Specify template helpers available to this template.\n     * @locus Client\n     * @param {Object} helpers Dictionary of helper functions by name.\n     * @importFromPackage templating\n     */\n    Template.prototype.helpers = function (dict) {\n      if (!isObject(dict)) {\n        throw new Error(\"Helpers dictionary has to be an object\");\n      }\n      for (let k in dict) this.__helpers.set(k, dict[k]);\n    };\n    const canUseGetters = function () {\n      if (Object.defineProperty) {\n        let obj = {};\n        try {\n          Object.defineProperty(obj, \"self\", {\n            get: function () {\n              return obj;\n            }\n          });\n        } catch (e) {\n          return false;\n        }\n        return obj.self === obj;\n      }\n      return false;\n    }();\n    if (canUseGetters) {\n      // Like Blaze.currentView but for the template instance. A function\n      // rather than a value so that not all helpers are implicitly dependent\n      // on the current template instance's `data` property, which would make\n      // them dependent on the data context of the template inclusion.\n      let currentTemplateInstanceFunc = null;\n\n      // If getters are supported, define this property with a getter function\n      // to make it effectively read-only, and to work around this bizarre JSC\n      // bug: https://github.com/meteor/meteor/issues/9926\n      Object.defineProperty(Template, \"_currentTemplateInstanceFunc\", {\n        get: function () {\n          return currentTemplateInstanceFunc;\n        }\n      });\n      Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n        if (typeof func !== 'function') {\n          throw new Error(\"Expected function, got: \" + func);\n        }\n        const oldTmplInstanceFunc = currentTemplateInstanceFunc;\n        try {\n          currentTemplateInstanceFunc = templateInstanceFunc;\n          return func();\n        } finally {\n          currentTemplateInstanceFunc = oldTmplInstanceFunc;\n        }\n      };\n    } else {\n      // If getters are not supported, just use a normal property.\n      Template._currentTemplateInstanceFunc = null;\n      Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n        if (typeof func !== 'function') {\n          throw new Error(\"Expected function, got: \" + func);\n        }\n        const oldTmplInstanceFunc = Template._currentTemplateInstanceFunc;\n        try {\n          Template._currentTemplateInstanceFunc = templateInstanceFunc;\n          return func();\n        } finally {\n          Template._currentTemplateInstanceFunc = oldTmplInstanceFunc;\n        }\n      };\n    }\n\n    /**\n     * @summary Specify event handlers for this template.\n     * @locus Client\n     * @param {EventMap} eventMap Event handlers to associate with this template.\n     * @importFromPackage templating\n     */\n    Template.prototype.events = function (eventMap) {\n      if (!isObject(eventMap)) {\n        throw new Error(\"Event map has to be an object\");\n      }\n      const template = this;\n      let eventMap2 = {};\n      for (let k in eventMap) {\n        eventMap2[k] = function (k, v) {\n          return function (event /*, ...*/) {\n            const view = this; // passed by EventAugmenter\n            const args = Array.prototype.slice.call(arguments);\n            // Exiting the current computation to avoid creating unnecessary\n            // and unexpected reactive dependencies with Templates data\n            // or any other reactive dependencies defined in event handlers\n            return Tracker.nonreactive(function () {\n              let data = Blaze.getData(event.currentTarget);\n              if (data == null) data = {};\n              const tmplInstanceFunc = Blaze._bind(view.templateInstance, view);\n              args.splice(1, 0, tmplInstanceFunc());\n              return Template._withTemplateInstanceFunc(tmplInstanceFunc, function () {\n                return v.apply(data, args);\n              });\n            });\n          };\n        }(k, eventMap[k]);\n      }\n      template.__eventMaps.push(eventMap2);\n    };\n\n    /**\n     * @function\n     * @name instance\n     * @memberOf Template\n     * @summary The [template instance](#Template-instances) corresponding to the current template helper, event handler, callback, or autorun.  If there isn't one, `null`.\n     * @locus Client\n     * @returns {Blaze.TemplateInstance}\n     * @importFromPackage templating\n     */\n    Template.instance = function () {\n      return Template._currentTemplateInstanceFunc && Template._currentTemplateInstanceFunc();\n    };\n\n    // Note: Template.currentData() is documented to take zero arguments,\n    // while Blaze.getData takes up to one.\n\n    /**\n     * @summary\n     *\n     * - Inside an `onCreated`, `onRendered`, or `onDestroyed` callback, returns\n     * the data context of the template.\n     * - Inside an event handler, returns the data context of the template on which\n     * this event handler was defined.\n     * - Inside a helper, returns the data context of the DOM node where the helper\n     * was used.\n     *\n     * Establishes a reactive dependency on the result.\n     * @locus Client\n     * @function\n     * @importFromPackage templating\n     */\n    Template.currentData = Blaze.getData;\n\n    /**\n     * @summary Accesses other data contexts that enclose the current data context.\n     * @locus Client\n     * @function\n     * @param {Integer} [numLevels] The number of levels beyond the current data context to look. Defaults to 1.\n     * @importFromPackage templating\n     */\n    Template.parentData = Blaze._parentData;\n\n    /**\n     * @summary Defines a [helper function](#Template-helpers) which can be used from all templates.\n     * @locus Client\n     * @function\n     * @param {String} name The name of the helper function you are defining.\n     * @param {Function} function The helper function itself.\n     * @importFromPackage templating\n     */\n    Template.registerHelper = Blaze.registerHelper;\n\n    /**\n     * @summary Removes a global [helper function](#Template-helpers).\n     * @locus Client\n     * @function\n     * @param {String} name The name of the helper function you are defining.\n     * @importFromPackage templating\n     */\n    Template.deregisterHelper = Blaze.deregisterHelper;\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isObject","module","link","default","v","isFunction","has","isEmpty","__reifyWaitForDeps__","Blaze","Template","viewName","renderFunction","Error","__helpers","HelperMap","__eventMaps","_callbacks","created","rendered","destroyed","prototype","get","name","set","helper","isTemplate","t","onCreated","cb","push","onRendered","onDestroyed","_getCallbacks","which","self","callbacks","concat","fireCallbacks","template","_withTemplateInstanceFunc","i","N","length","call","constructView","contentFunc","elseFunc","view","View","templateContentBlock","templateElseBlock","events","_onViewRendered","renderCount","forEach","m","_addEventMap","_templateInstance","TemplateInstance","templateInstance","inst","data","getData","_domrange","isDestroyed","firstNode","lastNode","createdCallbacks","onViewCreated","renderedCallbacks","onViewReady","destroyedCallbacks","onViewDestroyed","_allSubsReadyDep","Tracker","Dependency","_allSubsReady","_subscriptionHandles","$","selector","findAll","Array","slice","find","result","autorun","f","subscribe","subHandles","options","_len","arguments","args","_key","lastParam","lastParamOptionsPattern","onReady","Match","Optional","Function","onError","onStop","connection","Any","pop","test","subHandle","oldStopped","error","subscriptionId","changed","subscriptionsReady","depend","Object","values","every","handle","ready","helpers","dict","k","canUseGetters","defineProperty","obj","e","currentTemplateInstanceFunc","templateInstanceFunc","func","oldTmplInstanceFunc","_currentTemplateInstanceFunc","eventMap","eventMap2","event","nonreactive","currentTarget","tmplInstanceFunc","_bind","splice","apply","instance","currentData","parentData","_parentData","registerHelper","deregisterHelper","__reify_async_result__","_reifyError","async"],"sources":["packages/blaze/template.js"],"sourcesContent":["import isObject from 'lodash.isobject';\nimport isFunction from 'lodash.isfunction';\nimport has from 'lodash.has';\nimport isEmpty from 'lodash.isempty';\n\n// [new] Blaze.Template([viewName], renderFunction)\n//\n// `Blaze.Template` is the class of templates, like `Template.foo` in\n// Meteor, which is `instanceof Template`.\n//\n// `viewKind` is a string that looks like \"Template.foo\" for templates\n// defined by the compiler.\n\n/**\n * @class\n * @summary Constructor for a Template, which is used to construct Views with particular name and content.\n * @locus Client\n * @param {String} [viewName] Optional.  A name for Views constructed by this Template.  See [`view.name`](#view_name).\n * @param {Function} renderFunction A function that returns [*renderable content*](#Renderable-Content).  This function is used as the `renderFunction` for Views constructed by this Template.\n */\nBlaze.Template = function (viewName, renderFunction) {\n  if (! (this instanceof Blaze.Template))\n    // called without `new`\n    return new Blaze.Template(viewName, renderFunction);\n\n  if (typeof viewName === 'function') {\n    // omitted \"viewName\" argument\n    renderFunction = viewName;\n    viewName = '';\n  }\n  if (typeof viewName !== 'string')\n    throw new Error(\"viewName must be a String (or omitted)\");\n  if (typeof renderFunction !== 'function')\n    throw new Error(\"renderFunction must be a function\");\n\n  this.viewName = viewName;\n  this.renderFunction = renderFunction;\n\n  this.__helpers = new HelperMap;\n  this.__eventMaps = [];\n\n  this._callbacks = {\n    created: [],\n    rendered: [],\n    destroyed: []\n  };\n};\nconst Template = Blaze.Template;\n\nconst HelperMap = function () {};\nHelperMap.prototype.get = function (name) {\n  return this[' '+name];\n};\nHelperMap.prototype.set = function (name, helper) {\n  this[' '+name] = helper;\n};\nHelperMap.prototype.has = function (name) {\n  return (typeof this[' '+name] !== 'undefined');\n};\n\n/**\n * @summary Returns true if `value` is a template object like `Template.myTemplate`.\n * @locus Client\n * @param {Any} value The value to test.\n */\nBlaze.isTemplate = function (t) {\n  return (t instanceof Blaze.Template);\n};\n\n/**\n * @name  onCreated\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is created.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\nTemplate.prototype.onCreated = function (cb) {\n  this._callbacks.created.push(cb);\n};\n\n/**\n * @name  onRendered\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is inserted into the DOM.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\nTemplate.prototype.onRendered = function (cb) {\n  this._callbacks.rendered.push(cb);\n};\n\n/**\n * @name  onDestroyed\n * @instance\n * @memberOf Template\n * @summary Register a function to be called when an instance of this template is removed from the DOM and destroyed.\n * @param {Function} callback A function to be added as a callback.\n * @locus Client\n * @importFromPackage templating\n */\nTemplate.prototype.onDestroyed = function (cb) {\n  this._callbacks.destroyed.push(cb);\n};\n\nTemplate.prototype._getCallbacks = function (which) {\n  const self = this;\n  let callbacks = self[which] ? [self[which]] : [];\n  // Fire all callbacks added with the new API (Template.onRendered())\n  // as well as the old-style callback (e.g. Template.rendered) for\n  // backwards-compatibility.\n  callbacks = callbacks.concat(self._callbacks[which]);\n  return callbacks;\n};\n\nconst fireCallbacks = function (callbacks, template) {\n  Template._withTemplateInstanceFunc(\n    function () { return template; },\n    function () {\n      for (let i = 0, N = callbacks.length; i < N; i++) {\n        callbacks[i].call(template);\n      }\n    });\n};\n\nTemplate.prototype.constructView = function (contentFunc, elseFunc) {\n  const self = this;\n  const view = Blaze.View(self.viewName, self.renderFunction);\n  view.template = self;\n\n  view.templateContentBlock = (\n    contentFunc ? new Template('(contentBlock)', contentFunc) : null);\n  view.templateElseBlock = (\n    elseFunc ? new Template('(elseBlock)', elseFunc) : null);\n\n  if (self.__eventMaps || typeof self.events === 'object') {\n    view._onViewRendered(function () {\n      if (view.renderCount !== 1)\n        return;\n\n      if (! self.__eventMaps.length && typeof self.events === \"object\") {\n        // Provide limited back-compat support for `.events = {...}`\n        // syntax.  Pass `template.events` to the original `.events(...)`\n        // function.  This code must run only once per template, in\n        // order to not bind the handlers more than once, which is\n        // ensured by the fact that we only do this when `__eventMaps`\n        // is falsy, and we cause it to be set now.\n        Template.prototype.events.call(self, self.events);\n      }\n\n      self.__eventMaps.forEach(function (m) {\n        Blaze._addEventMap(view, m, view);\n      });\n    });\n  }\n\n  view._templateInstance = new Blaze.TemplateInstance(view);\n  view.templateInstance = function () {\n    // Update data, firstNode, and lastNode, and return the TemplateInstance\n    // object.\n    const inst = view._templateInstance;\n\n    /**\n     * @instance\n     * @memberOf Blaze.TemplateInstance\n     * @name  data\n     * @summary The data context of this instance's latest invocation.\n     * @locus Client\n     */\n    inst.data = Blaze.getData(view);\n\n    if (view._domrange && !view.isDestroyed) {\n      inst.firstNode = view._domrange.firstNode();\n      inst.lastNode = view._domrange.lastNode();\n    } else {\n      // on 'created' or 'destroyed' callbacks we don't have a DomRange\n      inst.firstNode = null;\n      inst.lastNode = null;\n    }\n\n    return inst;\n  };\n\n  /**\n   * @name  created\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is created.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  // To avoid situations when new callbacks are added in between view\n  // instantiation and event being fired, decide on all callbacks to fire\n  // immediately and then fire them on the event.\n  const createdCallbacks = self._getCallbacks('created');\n  view.onViewCreated(function () {\n    fireCallbacks(createdCallbacks, view.templateInstance());\n  });\n\n  /**\n   * @name  rendered\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is rendered.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  const renderedCallbacks = self._getCallbacks('rendered');\n  view.onViewReady(function () {\n    fireCallbacks(renderedCallbacks, view.templateInstance());\n  });\n\n  /**\n   * @name  destroyed\n   * @instance\n   * @memberOf Template\n   * @summary Provide a callback when an instance of a template is destroyed.\n   * @locus Client\n   * @deprecated in 1.1\n   */\n  const destroyedCallbacks = self._getCallbacks('destroyed');\n  view.onViewDestroyed(function () {\n    fireCallbacks(destroyedCallbacks, view.templateInstance());\n  });\n\n  return view;\n};\n\n/**\n * @class\n * @summary The class for template instances\n * @param {Blaze.View} view\n * @instanceName template\n */\nBlaze.TemplateInstance = function (view) {\n  if (! (this instanceof Blaze.TemplateInstance))\n    // called without `new`\n    return new Blaze.TemplateInstance(view);\n\n  if (! (view instanceof Blaze.View))\n    throw new Error(\"View required\");\n\n  view._templateInstance = this;\n\n  /**\n   * @name view\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The [View](../api/blaze.html#Blaze-View) object for this invocation of the template.\n   * @locus Client\n   * @type {Blaze.View}\n   */\n  this.view = view;\n  this.data = null;\n\n  /**\n   * @name firstNode\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The first top-level DOM node in this template instance.\n   * @locus Client\n   * @type {DOMNode}\n   */\n  this.firstNode = null;\n\n  /**\n   * @name lastNode\n   * @memberOf Blaze.TemplateInstance\n   * @instance\n   * @summary The last top-level DOM node in this template instance.\n   * @locus Client\n   * @type {DOMNode}\n   */\n  this.lastNode = null;\n\n  // This dependency is used to identify state transitions in\n  // _subscriptionHandles which could cause the result of\n  // TemplateInstance#subscriptionsReady to change. Basically this is triggered\n  // whenever a new subscription handle is added or when a subscription handle\n  // is removed and they are not ready.\n  this._allSubsReadyDep = new Tracker.Dependency();\n  this._allSubsReady = false;\n\n  this._subscriptionHandles = {};\n};\n\n/**\n * @summary Find all elements matching `selector` in this template instance, and return them as a JQuery object.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMNode[]}\n */\nBlaze.TemplateInstance.prototype.$ = function (selector) {\n  const view = this.view;\n  if (! view._domrange)\n    throw new Error(\"Can't use $ on template instance with no DOM\");\n  return view._domrange.$(selector);\n};\n\n/**\n * @summary Find all elements matching `selector` in this template instance.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMElement[]}\n */\nBlaze.TemplateInstance.prototype.findAll = function (selector) {\n  return Array.prototype.slice.call(this.$(selector));\n};\n\n/**\n * @summary Find one element matching `selector` in this template instance.\n * @locus Client\n * @param {String} selector The CSS selector to match, scoped to the template contents.\n * @returns {DOMElement}\n */\nBlaze.TemplateInstance.prototype.find = function (selector) {\n  const result = this.$(selector);\n  return result[0] || null;\n};\n\n/**\n * @summary A version of [Tracker.autorun](https://docs.meteor.com/api/tracker.html#Tracker-autorun) that is stopped when the template is destroyed.\n * @locus Client\n * @param {Function} runFunc The function to run. It receives one argument: a Tracker.Computation object.\n */\nBlaze.TemplateInstance.prototype.autorun = function (f) {\n  return this.view.autorun(f);\n};\n\n/**\n * @summary A version of [Meteor.subscribe](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe) that is stopped\n * when the template is destroyed.\n * @return {SubscriptionHandle} The subscription handle to the newly made\n * subscription. Call `handle.stop()` to manually stop the subscription, or\n * `handle.ready()` to find out if this particular subscription has loaded all\n * of its inital data.\n * @locus Client\n * @param {String} name Name of the subscription.  Matches the name of the\n * server's `publish()` call.\n * @param {Any} [arg1,arg2...] Optional arguments passed to publisher function\n * on server.\n * @param {Function|Object} [options] If a function is passed instead of an\n * object, it is interpreted as an `onReady` callback.\n * @param {Function} [options.onReady] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n * @param {Function} [options.onStop] Passed to [`Meteor.subscribe`](https://docs.meteor.com/api/pubsub.html#Meteor-subscribe).\n * @param {DDP.Connection} [options.connection] The connection on which to make the\n * subscription.\n */\nBlaze.TemplateInstance.prototype.subscribe = function (...args) {\n  const self = this;\n\n  const subHandles = self._subscriptionHandles;\n\n  // Duplicate logic from Meteor.subscribe\n  let options = {};\n  if (args.length) {\n    const lastParam = args[args.length - 1];\n\n    // Match pattern to check if the last arg is an options argument\n    const lastParamOptionsPattern = {\n      onReady: Match.Optional(Function),\n      // XXX COMPAT WITH 1.0.3.1 onError used to exist, but now we use\n      // onStop with an error callback instead.\n      onError: Match.Optional(Function),\n      onStop: Match.Optional(Function),\n      connection: Match.Optional(Match.Any)\n    };\n\n    if (isFunction(lastParam)) {\n      options.onReady = args.pop();\n    } else if (lastParam && ! isEmpty(lastParam) && Match.test(lastParam, lastParamOptionsPattern)) {\n      options = args.pop();\n    }\n  }\n\n  let subHandle;\n  const oldStopped = options.onStop;\n  options.onStop = function (error) {\n    // When the subscription is stopped, remove it from the set of tracked\n    // subscriptions to avoid this list growing without bound\n    delete subHandles[subHandle.subscriptionId];\n\n    // Removing a subscription can only change the result of subscriptionsReady\n    // if we are not ready (that subscription could be the one blocking us being\n    // ready).\n    if (! self._allSubsReady) {\n      self._allSubsReadyDep.changed();\n    }\n\n    if (oldStopped) {\n      oldStopped(error);\n    }\n  };\n\n  const { onReady, onError, onStop, connection } = options;\n  const callbacks = { onReady, onError, onStop };\n\n  // The callbacks are passed as the last item in the arguments array passed to\n  // View#subscribe\n  args.push(callbacks);\n\n  // View#subscribe takes the connection as one of the options in the last\n  // argument\n  subHandle = self.view.subscribe.call(self.view, args, {\n    connection: connection\n  });\n\n  if (!has(subHandles, subHandle.subscriptionId)) {\n    subHandles[subHandle.subscriptionId] = subHandle;\n\n    // Adding a new subscription will always cause us to transition from ready\n    // to not ready, but if we are already not ready then this can't make us\n    // ready.\n    if (self._allSubsReady) {\n      self._allSubsReadyDep.changed();\n    }\n  }\n\n  return subHandle;\n};\n\n/**\n * @summary A reactive function that returns true when all of the subscriptions\n * called with [this.subscribe](#TemplateInstance-subscribe) are ready.\n * @return {Boolean} True if all subscriptions on this template instance are\n * ready.\n */\nBlaze.TemplateInstance.prototype.subscriptionsReady = function () {\n  this._allSubsReadyDep.depend();\n  this._allSubsReady = Object.values(this._subscriptionHandles).every((handle) => {\n    return handle.ready();\n  });\n\n  return this._allSubsReady;\n};\n\n/**\n * @summary Specify template helpers available to this template.\n * @locus Client\n * @param {Object} helpers Dictionary of helper functions by name.\n * @importFromPackage templating\n */\nTemplate.prototype.helpers = function (dict) {\n  if (!isObject(dict)) {\n    throw new Error(\"Helpers dictionary has to be an object\");\n  }\n\n  for (let k in dict) this.__helpers.set(k, dict[k]);\n};\n\nconst canUseGetters = (function () {\n  if (Object.defineProperty) {\n    let obj = {};\n    try {\n      Object.defineProperty(obj, \"self\", {\n        get: function () { return obj; }\n      });\n    } catch (e) {\n      return false;\n    }\n    return obj.self === obj;\n  }\n  return false;\n})();\n\nif (canUseGetters) {\n  // Like Blaze.currentView but for the template instance. A function\n  // rather than a value so that not all helpers are implicitly dependent\n  // on the current template instance's `data` property, which would make\n  // them dependent on the data context of the template inclusion.\n  let currentTemplateInstanceFunc = null;\n\n  // If getters are supported, define this property with a getter function\n  // to make it effectively read-only, and to work around this bizarre JSC\n  // bug: https://github.com/meteor/meteor/issues/9926\n  Object.defineProperty(Template, \"_currentTemplateInstanceFunc\", {\n    get: function () {\n      return currentTemplateInstanceFunc;\n    }\n  });\n\n  Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n    if (typeof func !== 'function') {\n      throw new Error(\"Expected function, got: \" + func);\n    }\n    const oldTmplInstanceFunc = currentTemplateInstanceFunc;\n    try {\n      currentTemplateInstanceFunc = templateInstanceFunc;\n      return func();\n    } finally {\n      currentTemplateInstanceFunc = oldTmplInstanceFunc;\n    }\n  };\n} else {\n  // If getters are not supported, just use a normal property.\n  Template._currentTemplateInstanceFunc = null;\n\n  Template._withTemplateInstanceFunc = function (templateInstanceFunc, func) {\n    if (typeof func !== 'function') {\n      throw new Error(\"Expected function, got: \" + func);\n    }\n    const oldTmplInstanceFunc = Template._currentTemplateInstanceFunc;\n    try {\n      Template._currentTemplateInstanceFunc = templateInstanceFunc;\n      return func();\n    } finally {\n      Template._currentTemplateInstanceFunc = oldTmplInstanceFunc;\n    }\n  };\n}\n\n/**\n * @summary Specify event handlers for this template.\n * @locus Client\n * @param {EventMap} eventMap Event handlers to associate with this template.\n * @importFromPackage templating\n */\nTemplate.prototype.events = function (eventMap) {\n  if (!isObject(eventMap)) {\n    throw new Error(\"Event map has to be an object\");\n  }\n\n  const template = this;\n  let eventMap2 = {};\n  for (let k in eventMap) {\n    eventMap2[k] = (function (k, v) {\n      return function (event /*, ...*/) {\n        const view = this; // passed by EventAugmenter\n        const args = Array.prototype.slice.call(arguments);\n        // Exiting the current computation to avoid creating unnecessary\n        // and unexpected reactive dependencies with Templates data\n        // or any other reactive dependencies defined in event handlers\n        return Tracker.nonreactive(function () {\n          let data = Blaze.getData(event.currentTarget);\n          if (data == null) data = {};\n          const tmplInstanceFunc = Blaze._bind(view.templateInstance, view);\n          args.splice(1, 0, tmplInstanceFunc());\n          return Template._withTemplateInstanceFunc(tmplInstanceFunc, function () {\n            return v.apply(data, args);\n          });\n        });\n      };\n    })(k, eventMap[k]);\n  }\n\n  template.__eventMaps.push(eventMap2);\n};\n\n/**\n * @function\n * @name instance\n * @memberOf Template\n * @summary The [template instance](#Template-instances) corresponding to the current template helper, event handler, callback, or autorun.  If there isn't one, `null`.\n * @locus Client\n * @returns {Blaze.TemplateInstance}\n * @importFromPackage templating\n */\nTemplate.instance = function () {\n  return Template._currentTemplateInstanceFunc\n    && Template._currentTemplateInstanceFunc();\n};\n\n// Note: Template.currentData() is documented to take zero arguments,\n// while Blaze.getData takes up to one.\n\n/**\n * @summary\n *\n * - Inside an `onCreated`, `onRendered`, or `onDestroyed` callback, returns\n * the data context of the template.\n * - Inside an event handler, returns the data context of the template on which\n * this event handler was defined.\n * - Inside a helper, returns the data context of the DOM node where the helper\n * was used.\n *\n * Establishes a reactive dependency on the result.\n * @locus Client\n * @function\n * @importFromPackage templating\n */\nTemplate.currentData = Blaze.getData;\n\n/**\n * @summary Accesses other data contexts that enclose the current data context.\n * @locus Client\n * @function\n * @param {Integer} [numLevels] The number of levels beyond the current data context to look. Defaults to 1.\n * @importFromPackage templating\n */\nTemplate.parentData = Blaze._parentData;\n\n/**\n * @summary Defines a [helper function](#Template-helpers) which can be used from all templates.\n * @locus Client\n * @function\n * @param {String} name The name of the helper function you are defining.\n * @param {Function} function The helper function itself.\n * @importFromPackage templating\n */\nTemplate.registerHelper = Blaze.registerHelper;\n\n/**\n * @summary Removes a global [helper function](#Template-helpers).\n * @locus Client\n * @function\n * @param {String} name The name of the helper function you are defining.\n * @importFromPackage templating\n */\nTemplate.deregisterHelper = Blaze.deregisterHelper;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4f15e7f1eb227847e489de2fc3c49f8a9b4e1dc8"}
